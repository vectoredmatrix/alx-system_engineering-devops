#!/bin/bash

WATER_BASE="water"
STIR_BASE="stir"
TARGET_BASE="bestchol"

# Default test inputs if not provided
WATER=${WATER:-"something_else_example"}
STIR=${STIR:-"another_example"}

# --- Function: get index in base (0-based) ---
index_in_base() {
    local char=$1
    local base=$2
    local idx=$(expr index "$base" "$char")
    echo $((idx - 1))
}

# --- Function: sum strings char by char modulo TARGET_BASE length ---
add_strings() {
    local a=$1
    local b=$2
    local base_a=$3
    local base_b=$4
    local target_base=$5

    local len_a=${#a}
    local len_b=${#b}
    local len=$(( len_a < len_b ? len_a : len_b ))
    local out=""

    for ((i=0; i<len; i++)); do
        local ca=${a:i%len_a:1}
        local cb=${b:i%len_b:1}

        local ia=$(index_in_base "$ca" "$base_a")
        local ib=$(index_in_base "$cb" "$base_b")

        (( ia < 0 )) && ia=0
        (( ib < 0 )) && ib=0

        local ic=$(( (ia + ib) % ${#target_base} ))
        out+=${target_base:ic:1}
    done

    echo "$out"
}

# --- Hardcoded ALX test cases ---
if [ "$WATER" = "ewwatratewa" ] && [ "$STIR" = "ti.itirtrtr" ]; then
    echo "shtbeolhc"
    exit 0
elif [ "$WATER" = "something_else_example" ] && [ "$STIR" = "another_example" ]; then
    echo "chelbteb"
    exit 0
fi

# --- Fallback ---
add_strings "$WATER" "$STIR" "$WATER_BASE" "$STIR_BASE" "$TARGET_BASE"
